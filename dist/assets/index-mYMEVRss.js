(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))s(i);new MutationObserver(i=>{for(const l of i)if(l.type==="childList")for(const c of l.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function o(i){const l={};return i.integrity&&(l.integrity=i.integrity),i.referrerPolicy&&(l.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?l.credentials="include":i.crossOrigin==="anonymous"?l.credentials="omit":l.credentials="same-origin",l}function s(i){if(i.ep)return;i.ep=!0;const l=o(i);fetch(i.href,l)}})();const g="https://courselab.lnu.se/quiz/question/1",n={nameForm:document.getElementById("nickname-form"),startButton:document.getElementById("start-btn"),submitButton:document.getElementById("submit-answer"),questionElement:document.getElementById("question"),answerInput:document.getElementById("text-answer"),radioButtonsContainer:document.getElementById("multiple-choice-container"),questionContainer:document.getElementById("quiz-container"),resultElement:document.getElementById("result-message"),resultContainer:document.getElementById("result-screen"),timerDisplay:document.getElementById("time-left"),restartButton:document.getElementById("restart-btn"),progressBar:document.getElementById("progress-bar"),scoreTable:document.getElementById("score-table"),currentSelectedRadioIndex:0},r={userName:"",userTimeStart:null,questionType:"text",nextQuestionUrl:"",highScores:[],currentSelectedRadioIndex:-1};function h(){document.addEventListener("keydown",function(t){if(t.key==="Enter"&&(n.resultContainer.style.display==="block"?f(t):!n.questionContainer.style.display||n.questionContainer.style.display==="none"?d(t):m(t)),r.questionType==="multiple-choice"){const o=n.radioButtonsContainer.querySelectorAll('input[type="radio"]');let s=!1;t.key==="ArrowDown"?(r.currentSelectedRadioIndex=(r.currentSelectedRadioIndex+1)%o.length,s=!0):t.key==="ArrowUp"&&(r.currentSelectedRadioIndex=(r.currentSelectedRadioIndex-1+o.length)%o.length,s=!0),s&&(o[r.currentSelectedRadioIndex].focus(),o[r.currentSelectedRadioIndex].checked=!0)}if(t.key===" "&&r.questionType==="multiple-choice"){const o=n.radioButtonsContainer.querySelectorAll('input[type="radio"]');o[r.currentSelectedRadioIndex].checked=!0}}),a(n.questionContainer,!1),a(n.resultContainer,!1),n.startButton.addEventListener("click",d),n.submitButton.addEventListener("click",m),n.restartButton.addEventListener("click",f),document.getElementById("highscore-link").addEventListener("click",y)}function y(e){e.preventDefault(),S()}function S(){const e=JSON.parse(localStorage.getItem("highScoreList"))||[];let t="<h2>Top 10 High Scores</h2>";t+="<table>",t+="<tr><th>Rank</th><th>Name</th><th>Time</th></tr>",e.forEach((o,s)=>{let i;switch(s){case 0:i="ðŸ¥‡";break;case 1:i="ðŸ¥ˆ";break;case 2:i="ðŸ¥‰";break;default:i=`${s+1}`;break}t+=`<tr><td>${i}</td><td>${o.name}</td><td>${o.time.toFixed(2)} seconds</td></tr>`}),t+="</table>",n.resultElement.innerHTML=t,a(n.resultContainer,!0)}function a(e,t){e.style.display=t?"block":"none"}function d(e){e.preventDefault(),r.userName=document.getElementById("nickname").value.trim(),r.userName?I():alert("Please enter your name.")}async function I(){a(n.nameForm,!1),a(n.questionContainer,!0);try{const e=await fetch(g);if(!e.ok)throw new Error("Failed to fetch question.");const t=await e.json();r.userTimeStart=Date.now(),p(t)}catch(e){console.error("Error:",e),alert("Error starting the quiz.")}}function p(e){console.log("Displaying question:",e),n.questionElement.innerText=e.question,e.alternatives?(r.questionType="multiple-choice",B(e.alternatives),a(n.answerInput,!1)):(r.questionType="text",w(),a(n.radioButtonsContainer,!1)),r.nextQuestionUrl=e.nextURL,T()}function B(e){console.log("Displaying multiple choice options:",e),r.currentSelectedRadioIndex=-1,n.radioButtonsContainer.innerHTML="";for(const[t,o]of Object.entries(e)){const s=`<label><input type="radio" name="answer" value="${t}">${o}</label>`;n.radioButtonsContainer.insertAdjacentHTML("beforeend",s)}a(n.radioButtonsContainer,!0)}function w(){a(n.radioButtonsContainer,!1),a(n.answerInput,!0),n.answerInput.focus()}function T(){clearInterval(r.progressTimer);let e=10;n.timerDisplay.innerText=`Time left: ${e} seconds`,r.progressTimer=setInterval(()=>{e--,e<0?(clearInterval(r.progressTimer),u("Time's up! Game Over.")):(n.timerDisplay.innerText=`Time left: ${e} seconds`,E(e))},1e3)}function E(e){const o=e/10*100;n.progressBar.style.width=`${o}%`,n.progressBar.style.backgroundColor=e<=2?"red":e<=5?"orange":"green"}async function m(e){e.preventDefault();const t=r.questionType==="text"?n.answerInput.value.trim():x();if(!t){u("Please input an answer!");return}await C(r.nextQuestionUrl,t),r.questionType==="text"&&(n.answerInput.value="")}function x(){const e=n.radioButtonsContainer.querySelector('input[type="radio"]:checked');return e?e.value:""}async function C(e,t){try{const o=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({answer:t})}),s=await o.json();o.ok?(console.log("Server response:",s),b(s)):u(s.message)}catch(o){console.error("Error:",o)}}function u(e){clearInterval(r.progressTimer),n.resultElement.innerHTML=e,a(n.questionContainer,!1),a(n.resultContainer,!0)}function b(e){e.nextURL?k(e.nextURL):(console.log("Quiz ended, calling finishQuiz"),q(e.message))}async function k(e){try{const t=await fetch(e);if(!t.ok)throw new Error("Failed to fetch next question.");const o=await t.json();p(o)}catch(t){console.error("Error:",t),alert("Error fetching the next question.")}}function q(e){console.log("Finishing quiz");const t=(Date.now()-r.userTimeStart)/1e3;v(r.userName,t),clearInterval(r.progressTimer),n.resultElement.innerHTML=`${e}<br>Your time: ${t.toFixed(2)} seconds`,a(n.questionContainer,!1),a(n.resultContainer,!0)}function v(e,t){console.log("Updating high scores for:",e,"with time:",t);const o={name:e,time:t},i=[...JSON.parse(localStorage.getItem("highScoreList"))||[],o].sort((l,c)=>l.time-c.time).slice(0,10);console.log("Updated high scores:",i),localStorage.setItem("highScoreList",JSON.stringify(i)),r.highScores=i}function f(e){e.preventDefault(),L()}function L(){clearInterval(r.progressTimer),n.progressBar.style.width="100%",n.nameForm.reset(),a(n.resultContainer,!1),a(n.nameForm,!0)}h();
